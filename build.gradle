buildscript {
    ext {
        majorVersion = 1
        minorVersion = 1
    }
    repositories {
        mavenCentral() 
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:1.1.3'
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'war'
    id 'eclipse-wtp'
    id "org.flywaydb.flyway" version "6.5.7"
}

apply plugin: 'org.hidetake.ssh'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply from: 'gradle/versioning.gradle'

war {
    enabled = true
    duplicatesStrategy = "EXCLUDE"
    baseName 'doiserv'
}

//required task for Jenkin jobs
flyway {
  url = ''
  user = ''
  password = ''
}

group = 'au.csiro'
version = project.version
description = 'CSIRO DOI Service'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

test {
    jvmArgs '-XX:MaxPermSize=256m'
    testLogging { exceptionFormat "full" }
}

repositories {
    mavenCentral() 
}


dependencies {
    
    //    The spring-boot-starter-web contains the following dependencies:spring-boot-starter,   
    //    jackson, spring-core, spring-mvc, spring-boot-starter-tomcat
    implementation('org.springframework.boot:spring-boot-starter-web')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-cache')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation('org.springframework.boot:spring-boot-starter-hateoas')    
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')

    // Added. Has production health monitoring features
    implementation('org.springframework.boot:spring-boot-starter-actuator')

    // Added
    implementation ('org.springframework.boot:spring-boot-starter-log4j2')

	implementation ('org.slf4j:slf4j-api:1.7.30')
 	implementation ('org.apache.logging.log4j:log4j-slf4j-impl:2.14.0')
	implementation ('org.apache.logging.log4j:log4j-core:2.14.0')

    // Spring Security 
    implementation('org.springframework.boot:spring-boot-starter-security')
    
    // JWT can be used as an authentication mechanisms for Apps which do not have a DB
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    //Validation
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    
    // Swagger / Springfox
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    
    compile group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha1'    

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
  
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.9'

    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'    
   
    compile group: 'com.oracle.database.jdbc', name: 'ojdbc10', version: '19.7.0.0'
    compile group: 'commons-httpclient', name: 'commons-httpclient', version:'3.1'
    compile group: 'commons-lang', name: 'commons-lang', version:'2.4'
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
	 compile(group: 'org.jdom', name: 'jdom', version:'1.1.2') {
		exclude(module: 'maven-cobertura-plugin')
		exclude(module: 'maven-findbugs-plugin')
    }
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.flywaydb:flyway-core')
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    
//    In JUnit 5, though, the API is separated from the runtime, meaning two dependencies.
//    The API is manifest with junit-jupiter-api. 
//    The runtime is junit-jupiter-engine for JUnit 5, and junit-vintage-engine for JUnit 3 or 4.
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testCompile('org.springframework.boot:spring-boot-starter-test')

}

// Required to exclude Logback and include Log4j2
configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

//=====================================================================================================================
//
// Eclipse Configuration
//
//=====================================================================================================================

eclipse {
    project { natures 'org.springsource.ide.eclipse.gradle.core.nature' }
}

// We conditionally apply the publish script so that we don't need the properties for all builds.
if (gradle.startParameter.taskNames.contains('publish')) {
	apply from: 'gradle/publish.gradle'
}

// We conditionally apply the deploy script so that we don't need the properties for all builds.
if (gradle.startParameter.taskNames.contains('deployToServer')) {
	apply from: 'gradle/deploy.gradle'
}


// The status task checks the status of the DOI server and throws an exception if its not available 
if (gradle.startParameter.taskNames.contains('status')) {
    apply from: 'gradle/status.gradle'
}

apply from: 'gradle/report.gradle'
apply from: 'gradle/coverage-report.gradle'
